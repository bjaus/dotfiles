#!/usr/bin/env bash

# Script to check if a Go file is generated

set -e

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

if [ $# -eq 0 ]; then
  echo "Usage: $0 <file.go> [file2.go ...]"
  echo "Checks if Go files are generated"
  exit 1
fi

# Function to check if file is generated
is_generated_file() {
  local file="$1"
  # Check if file contains "Code generated" or "DO NOT EDIT" in first 5 lines
  if head -n 5 "$file" 2>/dev/null | grep -q -E "(Code generated|DO NOT EDIT|Autogenerated|autogenerated|AUTOGENERATED|Generated by)"; then
    return 0
  fi
  # Also check for common generated file patterns
  if [[ "$file" =~ \.(pb|twirp)\.go$ ]] || [[ "$file" =~ \.gen\.go$ ]] || [[ "$file" =~ _gen\.go$ ]]; then
    return 0
  fi
  return 1
}

for FILE in "$@"; do
  if [ -f "$FILE" ]; then
    if is_generated_file "$FILE"; then
      echo -e "${YELLOW}âœ“ $FILE is a generated file${NC}"
    else
      echo -e "${GREEN}  $FILE is NOT generated${NC}"
    fi
  else
    echo "File not found: $FILE"
  fi
done